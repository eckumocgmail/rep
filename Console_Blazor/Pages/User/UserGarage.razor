@page "/user/garage"
@attribute [Authorize(Roles = "webuser")]
@using MarketerWeb.Authorization;
 
@inject IHttpContextAccessor http

@inject pickpoint_delivery_service.DeliveryDbContext db
@inject SigninUser signin
@inject AuthStateProvider auth
<h3>User Cars</h3>

@code
{
    CustomerCar Car { get; set; } = new();
    bool ShowAddForm { get; set; }
    public async Task SendNotificationTestsAsync()
    {
        await Task.CompletedTask;
         
        StateHasChanged();
    }
}



<button class="btn btn-sm btn-primary" @onclick="SendNotificationTestsAsync">send</button>
<div style="padding: 20px; width: 100%;" class="d-flex flex-row flex-nowrap">
    <ul class="nav nav-pills" style="width: 100%;">
        <li class="nav-item">
            <a class="nav-link active" aria-current="page" >Персональные данные</a>
        </li>        
        <li class="nav-item">
            <a class="nav-link" >Автомобили</a>
        </li>        
    </ul>

    
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a @onclick="(evt => { ShowAddForm = ShowAddForm? false: true; StateHasChanged(); } )" class="nav-link">Автомобили</a>

        </li>
    </ul>
    
</div>

<div class="card d-flex flex-row flex-wrap" style="align-items: flex-start; justify-items: flex-start;">

    @if (ShowAddForm)
    {
        <div class="card" style="width: 320px; display: inline-block; padding: 20px;">

            <h2> Регистрация автомобиля </h2>
            <div class="form-group">
                <label for="exampleInputEmail1">Производитель</label>
                <input type="text" class="form-control" value="@Car.Manufacturer" @oninput="(evt => { Car.Manufacturer = evt.Value.ToString(); StateHasChanged(); })">
                <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Модель</label>
                <input type="text" class="form-control" value="@Car.Model" @oninput="(evt => { Car.Model = evt.Value.ToString(); StateHasChanged(); })">
            </div>
            <div class="form-group">
                <label>Год выпуска</label>
                <input type="number" class="form-control" value="@Car.Year" @oninput="(evt => { Car.Year = evt.Value.ToString(); StateHasChanged(); })">
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">ВИН номер</label>
                <input type="text" class="form-control" value="@Car.Vin" @oninput="(evt => { Car.Vin = evt.Value.ToString(); StateHasChanged(); })">
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Номер регистрации</label>
                <input type="text" class="form-control" value="@Car.RegNumber" @oninput="(evt => { Car.RegNumber = evt.Value.ToString(); StateHasChanged(); })">
            </div>
            <button type="submit" class="btn btn-primary btn-sm" style="margin-top: 10px;float: right;" @onclick="(evt => { OnCarAdded(); ShowAddForm = false; StateHasChanged();} )">Save</button>


        </div>
    }

    @foreach (var Car in Cars)
    {
        <div class="card" style="width: 320px; display: inline-block;">

            <div class="card-body">
                <div class="card-header">
                    <div><b>Производитель</b> @Car.Manufacturer</div>
                    <div><b>Модель</b>: @Car.Model</div>
                    <div><b>Год выпуска</b> : @Car.Year</div>
                    <div><b>Номер</b>: @Car.RegNumber</div>
                    <div><b>ВИН</b>: @Car.Vin</div>
                </div>
                <div>
                    <img />
                </div>
                <ul class="list-group" style="overflow-y: auto;">
                    <li onmouseleave="this.classList.remove('active')" hidden onmouseover="this.classList.add('active')" class="list-group-item">
                        Подобрать зап.части
                    </li>
                </ul>
            </div>
            <div class="card-footer">
            </div>
        </div>
    }
</div>


@code {
    [Parameter]
    public int CarId { get; set; }
    public List<CustomerCar> Cars { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var state = (auth.GetAuthenticationStateAsync().Result);
        this.Cars = db.Cars.ToList();       
    }

    public void OnCarAdded()
    {

        try
        {
            var user = signin.Verify();
            Car.CustomerId = db.Customers.First().Id;
            Cars.Add(Car);
            db.Cars.Add(Car);
            db.SaveChanges();
            Car = new();
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}
