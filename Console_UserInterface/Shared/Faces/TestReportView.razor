@using Newtonsoft.Json;
@code 
{
    [Parameter]
    public TestingReport Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Task.CompletedTask;        
    }    
}
@if (Model is not null)
{
    
    <div class="card">
    
        <ul class="list-group">
            <li class="list-group-item">
                @if (Model.Failed == false)
                {
                    <span class="text-info">Пройден @(new DateTimeOffset(Model.Ended).ToUnixTimeMilliseconds() - new DateTimeOffset(Model.Started).ToUnixTimeMilliseconds()) мс</span>
                }
                else
                {
                    <span class="text-danger">Провален @(new DateTimeOffset(Model.Ended).ToUnixTimeMilliseconds() - new DateTimeOffset(Model.Started).ToUnixTimeMilliseconds()) мс</span>
                }
                <b>&nbsp; @Model.Name</b>
            </li>
        
            @foreach (var message in Model.Messages.Where( message => String.IsNullOrWhiteSpace(message)==false).ToList())
            {

                <li class="list-group-item">
                    <span>@message</span>
                </li>
                
            }
        </ul>
    </div>

    <div style="margin-left: 20px;">
        @foreach (TestingReport report in Model.SubReports.Values.ToList())
        {
            <TestReportView Model="@report"></TestReportView>        
        }    
    </div>

}
