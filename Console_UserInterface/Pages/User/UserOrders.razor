@page "/user/orders"
@using Console_BlazorApp.AppUnits.DeliveryApi;
@attribute [Authorize(Roles = "webuser")]

@inject DeliveryDbContext db
@inject IOrdersService orders

<h3>Сделанные заказы</h3>
@code
{
    IEnumerable<Order> Orders { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        try
        {
            Orders = orders.GetOrders();
            foreach (var order in Orders)
            {
                order.OrderItems = orders.GetOrderItems(order.Id).ToList();
            }
        }
        catch(Exception ex)
        {
            this.Error($"Исключение инициаллизации компонента: {ex}");
        }
    }
}
<div class="card">
    <ul class="list-group">
        @foreach (Order order in Orders)
        {
            <li class="list-group-item bg-secondary text-white" style="margin: 20px;">
                <div style="font-size: 16px"    >
                    <span class="text-warning">Заказ #@(order.Id)</span>
                    <b class="text text-info" style=" font-size:14px;">@(db.Orders.Find(order.HolderID)).HolderLocation</b>
                    <div style="float: right; font-size:13px;">изменён: #@(order.OrderUpdated)</div></div>
                @if (order.HolderID is not null)
                {
                    <div style="font-size: 14px">Получение заказа: @db.Holders.First(h=>h.Id==order.HolderID).HolderLocation</div>
                }
                <label class="text-light" style="font-size: 14px">Содержимое заказа: </label>
                <ul class="list-group d-flex flex-row flex-wrap">
                    @foreach (var item in order.OrderItems)
                    {
                        <div class="card text-warning" style="width: 250px; height: 350px; margin: 10px;">
                            <div class="card-header text-black">

                                <div style="height: 40px; width: 100%; font-size: 14px; text-align: center;">
                                    <b>@item.Product.ProductName </b>
                                </div>
                                <div style="height: 20px; width: 100%; font-size: 14px; text-align: center;">
                                    (осталось: <b>@db.ProductsInStock.Where(instock => instock.ProductID == item.Product.Id).Sum(p => p.ProductCount)</b> шт)
                                </div>

                            </div>

                            <div class="card-body" @onclick="(evt => { item.Product.IncImageIndex(); StateHasChanged(); })">
                                <img src="/api/checkout/ProductImage?image_id=@(item.Product.ProductImages.ToList()[item.Product.ImageIndex].Id)" style="width: 200px; height: 200px;" />
                                <div style="display: none;" id="ProductIndicatorsJson_@item.Product.Id">@item.Product.ProductIndicatorsJson</div>
                            </div>
                            <div class="card-footer text-secondary text-center" style="font-size: 16px; height: 30px; padding: 3px;">
                                <b>@(item.Product.ProductName)</b> @(item.ProductCount) by $@(item.Product.ProductCost):
                            </div>
                        </div>
                        
                    }
                </ul>
                <div align="right">
                    <b>всего $@(order.OrderItems.Sum(item => item.Product.ProductCost * item.ProductCount))</b>
                </div>

                <div class="d-flex flex-row flex-nowrap">
                    <div style="font-size: 12px; width: 100%;">Получатель: @(db.Customers.First(c => c.Id == order.CustomerID).PhoneNumber)</div>
                    <button class="btn btn-info" style="font-size: 13px; height: 25px; padding: 2px;">
                        @switch(order.OrderStatus)
                        {
                            case 1: 
                                <div>проверить наличие на складе</div>
                                break;
                            case 2:
                                <div>передать на точку</div>
                                break;
                            case 3:
                                <div>Передать в транспортную службу</div>
                                break;
                        }
                    </button>
                    

                    @*<button class="btn btn-info" style="font-size: 13px; height: 25px; padding: 2px;"
                @onclick="(evt => { order.OnOrderCompleted(); db.SaveChanges(); StateHasChanged(); })">получить</button>*@
                    
                </div>
                
                
               
            </li>
        }
    </ul>
</div>