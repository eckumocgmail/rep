@page "/help"
@inherits BaseComponent
@inject IServiceProvider provider
@inject HelpService help
@code
{
    public string Current { get; set; }
    public Dictionary<string, string> Articles { get;set; }    
    public global::TypeNode<string> Contents { get; set; }
}
@code
{
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        this.Contents = help.GetContents();
        this.Articles = help.GetArticles();
    }
}
@code
{
    public List<string> NavMenuItems { get; set; } = new();
    public InputFormModel ContentModel { get; set; } = new InputFormModel();
}
<PageTitle>Справочная информация</PageTitle>
<CardContainer>
    <CardHeader>
        @*<TextComponent Align="left" Color="dark">Спарвочная информация/@Current</TextComponent>*@
        <SearchControl SearchOptions="@SearchOptions" SearchQuery="@SearchQuery" Placeholder="@Placeholder" OnInput="OnInputSearch" OnSearch="OnSearchSubmited"></SearchControl>
    </CardHeader>
    <CardBody>
        <SplitPane LeftSize="1" RightSize="2">
            <Left>
                <ListGroup Items="@(NavMenuItems/*Contents.GetChildren().Select(ch => ch.NodeName).ToList()*/)" OnListGroupItemClickedCallback="evt=> { Current=evt; StateHasChanged(); }"></ListGroup>
            </Left>
            <Right>
                 
                @if(Current is not null)
                {
                    @if (Articles.ContainsKey(Current)==false)
                    {
                        <div class="alert alert-warning">Не найдено содержимое статьи @Current</div>
                    }
                    else
                    {
                        <p>@Articles[Current]</p>
                    }
                    
                }
            </Right>
        </SplitPane>
    </CardBody>
    <CardFooter>
        <StatusBar StatusName="StatusName" CurrentValue="CurrentValue"></StatusBar>
    </CardFooter>
</CardContainer>

@code
{
    public string Placeholder { get; set; } = "Поиск";
    public string SearchQuery { get; set; } = "";
    public List<string> SearchOptions { get; set; } = new();
    public EventCallback<string> OnInput { get; set; }
    public EventCallback<string> OnSearch { get; set; }

    public void OnSearchSubmited()
    {

    }

    public void OnInputSearch()
    {

    }


    public string StatusName { get; set; }
    public int CurrentValue { get; set; }

    public void ProgressStart()
    {
    }
    public void Progress()
    {
    }
    public void ProgressEnd()
    {
    }
} 